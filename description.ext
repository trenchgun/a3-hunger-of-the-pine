//-------------------- Mission Information

author = "Trenchgun";											// Author name visible on loading screen. DO NOT EDIT IF USING BUILD SCRIPT
briefingName = "TEST COTVT 52 - Hunger of the Pine v2.1";				// Name visible in mission select screen. DO NOT EDIT IF USING BUILD SCRIPT
overviewText = "Two teams investigate a disturbance at the Vostok Research Station inside the Nadbor Exclusion Zone.";	// Description visible in mission select screen
//overviewPicture = "";							// Image visible in mission select screen. Leave commented, still doesn't work properly.
onLoadName = "Hunger of the Pine";				// Name visible on loading screen
onLoadMission = "Enter the Nadbor Exclusion Zone.";		// Description visible on loading screen
loadScreen = "media\loadscreen.jpg"; 					// Image visible on loading screen

class Header
{
	gameType = COOP;			// https://community.bistudio.com/wiki/Multiplayer_Game_Types
	minPlayers = 1;				// Minimum amount of players needed for the mission
	maxPlayers = 52;			// Maximum amount of players the mission supports
};

//-------------------- Template Defines
// Uncomment the following defines if you want to change away from the default values pictured here.

#define XPT_DEFINEPVP 1			// Uncomment if the mission is a PvP mission

// The following lines are used if you want to change the default text channel restriction for missions.
// By default, COOP missions only allow group and global, PVP missions allow side chat as well.
//#define XPT_TEXTCHANNELS_COOP disableChannels[] = {{0,false,true},{1,true,true},{2,true,true},{3,false,true},{4,true,true},{5,true,true}};
//#define XPT_TEXTCHANNELS_PVP disableChannels[] = {{0,false,true},{1,false,true},{2,true,true},{3,false,true},{4,true,true},{5,true,true}};

// The following defines set default values for lobby parameters. Change as needed for the mission.
#define XPT_MAPMARKERS 0			// 0 = Disabled, 1 = Enabled
//#define XPT_JIPTELEPORT 1			// 0 = Disabled, 1 = Enabled. Currently unused
//#define XPT_SAFESTART 1			// 0 = Disabled, 1 = Enabled. Currently unused.

//#define XPT_DEBUGMODE 0			// 0 = Disabled, 1 = Enabled.

#define XPT_DEFINE_CUSTOMLOADOUTS 1		// 0 = Disabled, 1 = Enabled. Enables the loadout system
//#define XPT_DEFINE_VEHICLESETUP 1			// 0 = Disabled, 1 = Enabled. Executes the vehicle setup script on all vehicles at mission start
//#define XPT_DEFINE_STAGEDEFAULT "stage1"	// Use this to set the default mission stage. Does nothing if stages aren't used.

// Curator settings
//#define XPT_DEFINE_CURATOR_CUSTOMLOADOUTS 1		// 0 = Disabled, 1 = Enabled. Currently unused.
//#define XPT_DEFINE_CURATOR_REMOVENVG 1			// 0 = Disabled, 1 = Enabled. Removes NVGs from zeus-spawned units.

//-------------------- Radio Defines
// ACRE2 radio setup parameters.

#define XPT_DEFINE_ACRE_ENABLE 0						// 0 = Disabled, 1 = Enabled. Default = 1. Set to 0 if you use a custom radio setup script.
#define XPT_DEFINE_ACRE_AUTORADIO 1						// 0 = Disabled, 1 = Enabled. Default = 0. Set to 1 to enable automatically giving radios to units.
#define XPT_DEFINE_ACRE_AUTOBABEL_COOP 0					// 0 = Disabled, 1 = Enabled. Default = 0. Determines if babel languages should be autoconfigured for COOP missions.
#define XPT_DEFINE_ACRE_AUTOBABEL_PVP 0					// 0 = Disabled, 1 = Enabled. Default = 1. Determines if babel languages should be autoconfigured for PVP missions.

//-------------------- ACE 3 Defines
// Uncomment the following defines if you want to change away from the default values pictured here.

//#define XPT_ACE3_MEDICALLEVEL 0					// 0 = Standard, 1 = Realistic (for side/sunday ops only), 2 = Custom (does not modify any settings, for side ops only)
//#define XPT_ACE3_PLAYERDAMAGETHRESHOLD 100		// Percentage value (without the % sign). Accepts values from 50 to 200 in increments of 10 (50, 60, 70, etc.) (70 = 70% of normal health)
//#define XPT_ACE3_AIDAMAGETHRESHOLD 100			// Percentage value (without the % sign). Accepts values from 50 to 200 in increments of 10 (50, 60, 70, etc.) (70 = 70% of normal health)
//#define XPT_ACE3_CARDARREST_TIMER 120				// Cardiac arrest timer duration in seconds. Accepts the following values: (60,90,120,180,240,300)

#define XPT_ACE3_FATALDAMAGESOURCE 2			// Default Fatal Damage Source setting. 0 = Vitals only (New system), 1 = Sum of trauma (Old system), 2 = Either
#define XPT_ACE3_PLAYERFATAL_COOP 0				// Default Fatal Injuries setting for co-op missions. 0 = Always, 1 = Only in Cardiac Arrest, 2 = Never
#define XPT_ACE3_PLAYERFATAL_PVP 0				// Default Fatal Injuries for PVP missions. 0 = Always, 1 = Only in Cardiac Arrest, 2 = Never

//-------------------- ACEX Defines

//#define XPT_ACEX_VIEWRESTRICTION_COOP 1			// Default view setting for co-op. 0 = Disabled. 1 = First-person only. 2 = Third-person only. 3 = Selective
#define XPT_ACEX_VIEWRESTRICTION_PVP 1			// Default view setting for PVP. 0 = Disabled. 1 = First-person only. 2 = Third-person only. 3 = Selective

//define XPT_ACEX_VIEWRESTRICTION_FOOT 1			// Default view setting when 'selective' is chosen. 0 = Disabled. 1 = First-person only. 2 = Third-person only.
//define XPT_ACEX_VIEWRESTRICTION_LAND 1			// Default view setting when 'selective' is chosen. 0 = Disabled. 1 = First-person only. 2 = Third-person only.
//define XPT_ACEX_VIEWRESTRICTION_AIR 0			// Default view setting when 'selective' is chosen. 0 = Disabled. 1 = First-person only. 2 = Third-person only.
//define XPT_ACEX_VIEWRESTRICTION_SEA 0			// Default view setting when 'selective' is chosen. 0 = Disabled. 1 = First-person only. 2 = Third-person only.

//-------------------- Admin

// Debug console - A list of playerUIDs that have access to the debug console when the mission is running.
// Arma 3 playerUIDs correspond with the Steam64ID of the user.
enableDebugConsole[] = {
	"76561198072893692"
};														// Array of player UIDs that have debug console access.
allowFunctionsLog = 0;									// Disables functions from spamming the server RPT logs
allowFunctionsRecompile = 0;							// Always leave this as 0

//-------------------- Misc

disabledAI = 1;					// Disable AI in player slots
aiKills = 0;					// Don't show AI units on the leaderboards
enableItemsDropping = 0;		// Don't drop player items when they swim
joinUnassigned = 1;				// Don't autoslot players when they join the lobby
skipLobby = 0;					// Change this to 1 if all players slots are the same and you want to skip the lobby screen. Needs joinUnassigned = 0;
showUAVFeed = 1;				// Leave this as 1
forceRotorLibSimulation = 0;	// Leave AFM choice to the player
saving = 0;						// Disable saving for multiplayer missions

//-------------------- Respawn
// https://community.bistudio.com/wiki/Arma_3_Respawn

respawn = 3;					// 3 is BASE respawn
respawnDelay = 120;				// Respawn delay in seconds
respawnVehicleDelay = 1800;		// Vehicle respawn delay in seconds
respawnDialog = 0;				// Disables showing scoreboard when respawning
respawnOnStart = 0;				// Respawns players at the start of the mission. Leave this off for most cases.
respawnButton = 1;				// Enable the respawn button for players

//-------------------- Respawn Templates

respawnTemplates[] = {"MenuPosition","Counter"};								// Templates used for player respawning, applies to all sides
//respawnTemplatesWest[] = {"MenuPosition", "Spectator"};		// Templates used for player respawning, applies to BLUFOR only
//respawnTemplatesEast[] = {"MenuPosition", "Spectator"};		// Templates used for player respawning, applies to OPFOR only
//respawnTemplatesGuer[] = {"MenuPosition", "Spectator"};		// Templates used for player respawning, applies to Independent only
//respawnTemplatesCiv[] = {"MenuPosition", "Spectator"};		// Templates used for player respawning, applies to Civilians only
//respawnTemplatesVirtual[] = {"MenuPosition", "Spectator"};	// Templates used for player respawning, applies to Virtual Units (Zeus, HC) only

//-------------------- Garbage Collector


corpseManagerMode = 3;				// Only manages corpses for non-respawning units
corpseLimit = 50;					// Start cleaning up corpses once we get above this number
corpseRemovalMinTime = 60;			// Make sure corpses stay on the ground for at least 60 seconds
corpseRemovalMaxTime = 600;			// Remove corpses after 10 minutes regardless of how many are on the map  

wreckManagerMode = 3;				// Only manages corpses for non-respawning units
wreckLimit = 10;					// Start cleaning up wrecks once we get above this number
wreckRemovalMinTime = 60;			// Make sure wrecks stay for at least 60 seconds
wreckRemovalMaxTime = 1800;			// Remove wrecks after 30 minutes regardless of how many are on the map

minPlayerDistance = 50;				// Don't remove a wreck or corpse if there's a player within 50 meters.

//-------------------- CBA Defines

cba_settings_hasSettingsFile = 1;	// DO NOT CHANGE FROM 1

//-------------------- Template Defines

#include "template\config\XPT_Defines.hpp"

//-------------------- Parameters

class params
{
	#include "template\config\CfgParams.hpp"
	#include "config\CfgParams.hpp"
};

//-------------------- Functions

class CfgFunctions
{
	#include "template\config\CfgFunctions.hpp"
	#include "config\CfgFunctions.hpp"
};

//-------------------- Notifications

class CfgNotifications
{
	#include "template\config\CfgNotifications.hpp"
	#include "config\CfgNotifications.hpp"
};

//-------------------- Communication Menu

class CfgCommunicationMenu
{
	#include "template\config\CfgCommunicationMenu.hpp"
	#include "config\CfgCommunicationMenu.hpp"
};

//-------------------- Debriefing

class CfgDebriefing
{
	#include "config\CfgDebriefing.hpp"
};

class CfgDebriefingSections
{
	class extra_objectives
	{
		title = "What extra objectives were completed?";
		variable = "objectiveEndString";
	}
}

//-------------------- Respawn Inventories

class CfgRespawnInventory
{
	#include "config\CfgRespawnInventory.hpp"
};

//-------------------- Respawn Templates
class CfgRespawnTemplates
{
	#include "template\config\CfgRespawnTemplates.hpp"
	#include "config\CfgRespawnTemplates.hpp"
};

//-------------------- Unit Insignias

class CfgUnitInsignia
{
	#include "template\config\CfgUnitInsignia.hpp"
	#include "config\CfgUnitInsignia.hpp"
};

//-------------------- ORBAT

class CfgORBAT
{
	#include "config\CfgORBAT.hpp"
};

//-------------------- Task Enhancements

class CfgTaskEnhancements
{
	#include "config\CfgTaskEnhancements.hpp"
};

//-------------------- Task Descriptions

class CfgTaskDescriptions
{
	#include "config\CfgTaskDescriptions.hpp"
};

//-------------------- Mirage Coordinator

#include "config\CfgAdmins.hpp"

//-------------------- Custom config entries

class CfgXPT
{
	class stages
	{
		#include "template\config\XPT_stage_base.hpp" 	// This include must be first in the stage section
		#include "config\stages\stage1.hpp"
	};
	
	#include "config\XPTBriefings.hpp"
	#include "config\XPTItemCargos.hpp"
	#include "config\XPTLoadouts.hpp"
	#include "config\XPTTaskUpdates.hpp"
	#include "config\XPTVehicleSetup.hpp"
};


class CfgSounds
{
	// My Sounds -----------------------------------------------------------------
	class button 
	{
		name = "button";
		sound[] = {"sounds\button.ogg", db+25, 1};
		titles[] = {1, ""};
	};
	
	// AL generic ------------------------------------------------------------------
	class NoSound 
	{
		name = "NoSound";
		sound[] = {"", 0, 1};
		titles[] = {0, ""};
	};	
	// AL Strigoi ------------------------------------------------------------------
	class casp_voice
	{
		name = "casp_voice";
		sound[] = {"\sound\casp_voice.ogg", db+5, 1};
		titles[] = {};
	};
	class 01_salt
	{
		name = "01_salt";
		sound[] = {"\sound\01_salt.ogg", db+10, 1};
		titles[] = {};
	};
	class 02_salt
	{
		name = "2";
		sound[] = {"\sound\02_salt.ogg", db+10, 1};
		titles[] = {};
	};
	class 03_salt
	{
		name = "03_salt";
		sound[] = {"\sound\03_salt.ogg", db+10, 1};
		titles[] = {};
	};
	class 01_tip_casp
	{
		name = "01_tip_casp";
		sound[] = {"\sound\01_tip_casp.ogg", db+5, 1};
		titles[] = {};
	};
	class 02_tip_casp
	{
		name = "02_tip_casp";
		sound[] = {"\sound\02_tip_casp.ogg", 0.8, 1};
		titles[] = {};
	};
	class 03_tip_casp
	{
		name = "03_tip_casp";
		sound[] = {"\sound\03_tip_casp.ogg", db+5, 1};
		titles[] = {};
	};
	class 04_tip_casp
	{
		name = "04_tip_casp";
		sound[] = {"\sound\04_tip_casp.ogg", db+5, 1};
		titles[] = {};
	};
	class 05_tip_casp
	{
		name = "05_tip_casp";
		sound[] = {"\sound\05_tip_casp.ogg", db+5, 1};
		titles[] = {};
	};
	class 06_tip_casp
	{
		name = "06_tip_casp";
		sound[] = {"\sound\06_tip_casp.ogg", db+5, 1};
		titles[] = {};
	};
	class 07_tip_casp
	{
		name = "07_tip_casp";
		sound[] = {"\sound\07_tip_casp.ogg", db+5, 1};
		titles[] = {};
	};	
	class 01_tease
	{
		name = "01_tease";
		sound[] = {"\sound\01_tease.ogg", 1, 1};
		titles[] = {};
	};
	class 02_tease
	{
		name = "02_tease";
		sound[] = {"\sound\02_tease.ogg", 0.9, 1};
		titles[] = {};
	};
	class 03_tease
	{
		name = "03_tease";
		sound[] = {"\sound\03_tease.ogg", 1, 1};
		titles[] = {};
	};
	class 04_tease
	{
		name = "04_tease";
		sound[] = {"\sound\04_tease.ogg", 1, 1};
		titles[] = {};
	};	
	class 01_atk_bg
	{
		name = "01_atk_bg";
		sound[] = {"\sound\01_atk_bg.ogg", 1, 1};
		titles[] = {};
	};
	class 02_atk
	{
		name = "02_atk";
		sound[] = {"\sound\02_atk.ogg", 1, 1};
		titles[] = {};
	};
	class 03_atk
	{
		name = "03_atk";
		sound[] = {"\sound\03_atk.ogg", 1, 1};
		titles[] = {};
	};
	class 04_atk
	{
		name = "04_atk";
		sound[] = {"\sound\04_atk.ogg", 1, 1};
		titles[] = {};
	};
	class tiuit
	{
		name = "tiuit";
		sound[] = {\sound\tiuit.ogg, 0.2, 1.0};
		titles[] = {0, ""};	
	};
	class puls
	{
		name = "puls";
		sound[] = {"\sound\puls.ogg", db+10, 1};
		titles[] = {};
	};
	
	// AL flamer --------------------------------------------
	class flamer_voice
	{
		name = "flamer_voice";
		sound[] = {"\sound\flamer_voice.ogg", db+5, 1};
		titles[] = {};
	};
	class 01_blast
	{
		name = "01_blast";
		sound[] = {"\sound\01_blast.ogg", db+10, 1};
		titles[] = {};
	};
	class 02_blast
	{
		name = "2";
		sound[] = {"\sound\02_blast.ogg", db+10, 1};
		titles[] = {};
	};
	class 03_blast
	{
		name = "03_blast";
		sound[] = {"\sound\03_blast.ogg", db+10, 1};
		titles[] = {};
	};
	class furnal
	{
		name = "furnal";
		sound[] = {"\sound\furnal.ogg",1, 1};
		titles[] = {1, ""};
	};
	class burned
	{
		name = "burned";
		sound[] = {"\sound\burned.ogg", 1, 1};
		titles[] = {1, ""};
	};
	class close_bomb
	{
		name = "close_bomb";
		sound[] = {"\sound\close_bomb.ogg",db+30, 1};
		titles[] = {};
	};
	class eko_sharp
	{
		name = "eko_sharp";
		sound[] = {"\sound\eko_sharp.ogg",1, 1};
		titles[] = {};
	};
	class eko_bomb
	{
		name = "eko_bomb";
		sound[] = {"\sound\eko_bomb.ogg",1, 1};
		titles[] = {};
	};
	class foc_initial
	{
		name = "foc_initial";
		sound[] = {"\sound\foc_initial.ogg",1, 1};
		titles[] = {};
	};
	class 02
	{
		name = "02";
		sound[] = {"\sound\02.ogg",1, 1};
		titles[] = {1, ""};
	};	
	class 04
	{
		name = "04";
		sound[] = {"\sound\04.ogg",1, 1};
		titles[] = {1, ""};
	};
	class 03
	{
		name = "03";
		sound[] = {"\sound\03.ogg",1, 1};
		titles[] = {1, ""};
	};
	
	// AL Worm ---------------------------------------------
	class idle_01
	{
		name = "idle_01";
		sound[] = {"\sound\idle_01.ogg", db+5, 1};
		titles[] = {};
	};
	class idle_02
	{
		name = "idle_02";
		sound[] = {"\sound\idle_02.ogg", db+10, 1};
		titles[] = {};
	};	
	class post_impact_01
	{
		name = "post_impact_01";
		sound[] = {"\sound\post_impact_01.ogg", 1, 1};
		titles[] = {};
	};
	class post_impact_02
	{
		name = "post_impact_02";
		sound[] = {"\sound\post_impact_02.ogg", 1, 1};
		titles[] = {};
	};		
	class post_impact_03
	{
		name = "post_impact_03";
		sound[] = {"\sound\post_impact_03.ogg", 1, 1};
		titles[] = {};
	};	
	class post_impact_04
	{
		name = "post_impact_04";
		sound[] = {"\sound\post_impact_04.ogg", 1, 1};
		titles[] = {};
	};
	class impact_30	
	{
		name = "impact_30";
		sound[] = {"\sound\impact_30.ogg",db+30, 1};
		titles[] = {};
	};	
	class impact_27
	{
		name = "impact_27";
		sound[] = {"\sound\impact_27.ogg",db+30, 1};
		titles[] = {};
	};
	class salt_05
	{
		name = "salt_05";
		sound[] = {"\sound\salt_05.ogg",db+20, 1};
		titles[] = {};
	};
	class salt_08
	{
		name = "salt_08";
		sound[] = {"\sound\salt_08.ogg",db+20, 1};
		titles[] = {};
	};
	class move_01
	{
		name = "move_01";
		sound[] = {"\sound\move_01.ogg",1, 1};
		titles[] = {};
	};
	class move_02
	{
		name = "move_02";
		sound[] = {"\sound\move_02.ogg",1, 1};
		titles[] = {};
	};
	class move_03
	{
		name = "move_03";
		sound[] = {"\sound\move_03.ogg",1, 1};
		titles[] = {};
	};
	class move_04
	{
		name = "move_04";
		sound[] = {"\sound\move_04.ogg",1, 1};
		titles[] = {};
	};
	class move_05
	{
		name = "move_05";
		sound[] = {"\sound\move_05.ogg",1, 1};
		titles[] = {};
	};
	class move_06
	{
		name = "move_06";
		sound[] = {"\sound\move_06.ogg",1, 1};
		titles[] = {};
	};
	class move_07
	{
		name = "move_07";
		sound[] = {"\sound\move_07.ogg",1, 1};
		titles[] = {};
	};
	class move_08
	{
		name = "move_08";
		sound[] = {"\sound\move_08.ogg",1, 1};
		titles[] = {};
	};
	class move_09
	{
		name = "move_09";
		sound[] = {"\sound\move_099.ogg",1, 1};
		titles[] = {};
	};
	class move_10
	{
		name = "move_10";
		sound[] = {"\sound\move_10.ogg",1, 1};
		titles[] = {};
	};
	class move_11
	{
		name = "move_11";
		sound[] = {"\sound\move_11.ogg",1, 1};
		titles[] = {};
	};
	class move_12
	{
		name = "move_12";
		sound[] = {"\sound\move_12.ogg",1, 1};
		titles[] = {};
	};
	class move_13
	{
		name = "move_13";
		sound[] = {"\sound\move_13.ogg",1, 1};
		titles[] = {};
	};
	class move_14
	{
		name = "move_14";
		sound[] = {"\sound\move_14.ogg",1, 1};
		titles[] = {};
	};
	class move_15
	{
		name = "move_15";
		sound[] = {"\sound\move_15.ogg",1, 1};
		titles[] = {};
	};
	class bump
	{
		name = "bump";
		sound[] = {"\sound\bump.ogg",db+20, 1};
		titles[] = {};
	};
	class strigat
	{
		name = "strigat";
		sound[] = {"\sound\strigat.ogg",db+20, 1};
		titles[] = {};
	};	
};

//-------------------- ACE3 Settings
#include "config\ACE_Settings.hpp"
